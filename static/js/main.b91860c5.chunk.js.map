{"version":3,"sources":["Components/Global/Global.module.css","Components/Cards/Cards.module.css","Components/CardsGlobal/Cards.module.css","App.module.css","Components/CountryPicker/CountryPicker.module.css","Components/Home/Home.module.css","Components/Cards/Cards.jsx","api/index.js","Components/CountryPicker/CountryPicker.jsx","images/image.png","Components/Home/Home.jsx","Components/Global/Global.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","country","carddetails","style","styles","infected","text","value","bottomText","className","container","Grid","spacing","justify","map","detail","index","item","component","Card","xs","md","cx","margin","padding","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","url","fetchData","a","changeableUrl","axios","get","lastUpdate","console","log","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","key","Footer","Fragment","display","marginBottom","fontSize","marginTop","textAlign","href","rel","textDecoration","Global","props","then","response","setState","confirm","lastupdate","getData","catch","error","state","this","Component","App","fetchedData","image","src","coronaImage","alt","Home","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b91860c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Global_container__3_Fkq\",\"Card\":\"Global_Card__2Emwl\",\"infected\":\"Global_infected__zRn61\",\"recovered\":\"Global_recovered__1La64\",\"deaths\":\"Global_deaths__2pDh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__34lGA\",\"card\":\"Cards_card__qCxY-\",\"infected\":\"Cards_infected__-QCru\",\"recovered\":\"Cards_recovered__3e23N\",\"deaths\":\"Cards_deaths__2jOSh\",\"active\":\"Cards_active__3GSNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2v4vQ\",\"card\":\"Cards_card__vV8oa\",\"infected\":\"Cards_infected__9kyeI\",\"recovered\":\"Cards_recovered__obxj_\",\"deaths\":\"Cards_deaths__3w7np\",\"active\":\"Cards_active__1LZ_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2llA9\",\"image\":\"App_image__1Rg5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2y1oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3o6GM\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n  data: { confirmed, recovered, deaths},\n  country,\n}) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  // const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n  let carddetails = [\n    {\n      style: styles.infected,\n      text: \"Confirmed\",\n      value: confirmed.value,\n      bottomText: \"Angka Orang Terinfeksi Covid-19\",\n    },\n    {\n      style: styles.recovered,\n      text: \"Recovered\",\n      value: recovered.value,\n      bottomText: \"Angka Orang Sembuh dari Covid-19\",\n    },\n    {\n      style: styles.deaths,\n      text: \"Deaths\",\n      value: deaths.value,\n      bottomText: \"Angka Orang Meninggal karena Covid-19\",\n    },\n  ];\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {carddetails.map((detail, index) => (\n          <Grid\n            item\n            component={Card}\n            xs={12}\n            md={2}\n            className={cx(styles.Card, detail.style)}\n            key={index}\n            style={{ margin: \"0px 23.675px\", padding: \"12px\" }}\n          >\n            <CardContent>\n              <Typography color=\"textPrimary\" gutterBottom>\n                <b>{detail.text}</b>\n              </Typography>\n              <Typography variant=\"h5\">\n                <CountUp\n                  start={0}\n                  end={detail.value}\n                  duration={2}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography variant=\"body2\">{detail.bottomText}</Typography>\n              <Typography color=\"textPrimary\"> {country} </Typography>\n            </CardContent>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(`${url}`);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n      console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, key) => (\n          <option key={key} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/image.e964f919.png\";","import React from \"react\";\r\nimport styles from \"./Home.module.css\";\r\n\r\nconst Footer = () => {\r\n  const onMouseOut = (e) => {\r\n    e.target.style.color = \"#cccccc\";\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.container}>\r\n        <h6\r\n          style={{\r\n            display: \"block\",\r\n            marginBottom: \"0px\",\r\n            fontSize: 30,\r\n            marginTop: \"40px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <a\r\n            href=\"https://debirizk.github.io/index.html\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: \"rgba(0,0,255,0.6)\", textDecoration: \"none\" }}\r\n          >\r\n            Back to Home\r\n          </a>\r\n        </h6>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Global.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n// import {fetchDailyData} from \"../../api\";\r\nimport axios from 'axios';\r\nimport { StylesProvider } from '@material-ui/styles';\r\n\r\nexport default class Global extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            confirm:null,\r\n            deaths:null,\r\n            recovered:null,\r\n            lastupdate:null,\r\n            country:null\r\n        }\r\n    }\r\n    handleCountryChange=(country)=>{\r\n        axios.get(\"https://covid19.mathdro.id/api/countries/\" + country)\r\n        .then(response=>{\r\n            this.setState({\r\n                confirm:response.data.confirmed.value,\r\n                deaths:response.data.deaths.value,\r\n                recovered:response.data.recovered.value,\r\n                lastupdate:response.data.lastUpdate\r\n            })\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n    getData=()=>{\r\n        axios.get('https://covid19.mathdro.id/api')\r\n       .then(response=>{\r\n           this.setState({\r\n               confirm:response.data.confirmed.value,\r\n               deaths:response.data.deaths.value,\r\n               recovered:response.data.recovered.value,\r\n               lastupdate:response.data.lastUpdate\r\n           })\r\n       })\r\n      .catch(error=>{\r\n          console.log(error.response);\r\n          \r\n      })\r\n    }\r\n    render() {\r\n      return (\r\n        <div className={styles.container}>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <Grid \r\n              item\r\n              component={Card}\r\n              xs={12}\r\n              md={2}\r\n              key={1}\r\n              className={styles.Card, styles.infected}\r\n              style={{ margin: \"0px 453.675px\", padding: \"1px\"}}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textPrimary\" gutterBottom>\r\n                  <b>Confirmed</b>\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={this.state.confirm}\r\n                    duration={2}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"body2\">Angka Orang Terinfeksi Covid-19</Typography>\r\n                <Typography color=\"textPrimary\"> Global </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          \r\n            <Grid \r\n              item\r\n              component={Card}\r\n              xs={12}\r\n              md={2}\r\n              key={2}\r\n              className={styles.Card, styles.recovered}\r\n              style={{ margin: \"0px 453.675px\", padding: \"1px\"}}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textPrimary\" gutterBottom>\r\n                  <b>Recovered</b>\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={this.state.recovered}\r\n                    duration={2}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"body2\">Angka Orang Sembuh dari Covid-19</Typography>\r\n                <Typography color=\"textPrimary\"> Global </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          \r\n            <Grid \r\n              item\r\n              component={Card}\r\n              xs={12}\r\n              md={2}\r\n              key={3}\r\n              className={styles.Card, styles.deaths}\r\n              style={{ margin: \"0px 453.675px\", padding: \"1px\" }}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textPrimary\" gutterBottom>\r\n                  <b>Deaths</b>\r\n                </Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={this.state.deaths}\r\n                    duration={2}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"body2\">Angka Orang Meninggal karena Covid-19</Typography>\r\n                <Typography color=\"textPrimary\"> Global </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>            \r\n        </div>\r\n            \r\n        )\r\n    }\r\n}","import React, {useState} from \"react\";\nimport { Cards, CountryPicker } from \"./Components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport {fetchDailyData} from \"./api\";\nimport coronaImage from \"./images/image.png\";\nimport Home from \"./Components/Home/Home\";\nimport axios from \"axios\";\nimport Global from \"./Components/Global/Global.jsx\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <br />\n        <br />\n        <Global /> \n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Cards data={data} country={country} />\n        <Home />\n        \n      </div>\n    );\n  }\n\n\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}